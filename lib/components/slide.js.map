{"version":3,"sources":["../../src/components/slide.js"],"names":[],"mappings":"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","file":"slide.js","sourcesContent":["import React, { Component, cloneElement } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport { Transition } from \"react-overlays\"\n\nconst TRANSITION_DURATION = 200\nconst TRANSITION_FRAME_DELAY = 5\nconst TRANSITION_HALF = 0.5\n\nclass DateTimePickerViewSlide extends Component {\n\n    static propTypes = {\n        children : React.PropTypes.element.isRequired,\n        collapse : React.PropTypes.bool,\n        in       : React.PropTypes.bool\n    };\n\n    easeDelta (progress) {\n        return (progress < TRANSITION_HALF) ? (2 * progress / 2) : ((2 - 2 * (1 - progress)) / 2)\n    }\n\n    transition = (slide, step) => {\n        const start = new Date()\n        slide.style.overflow = \"hidden\"\n        const timer = setInterval(() => {\n            const timePassed = new Date() - start\n            const progress = Math.min(1, timePassed / TRANSITION_DURATION)\n\n            const delta = this.easeDelta(progress)\n\n            step(delta)\n\n            if (progress === 1) {\n                clearInterval(timer)\n                slide.style.removeProperty(\"height\")\n                slide.style.removeProperty(\"overflow\")\n            }\n        }, TRANSITION_FRAME_DELAY)\n    };\n\n    slideToggle (slide, from, to) {\n        slide.style.height = `${from}px`\n\n        this.transition(slide, (delta) => {\n            let height\n            if (from > to) {\n                height = from - from * delta\n            } else {\n                height = to * delta\n            }\n            slide.style.height = `${height}px`\n        })\n    }\n\n    onEntering = () => {\n        const slide = findDOMNode(this.refs.slide)\n        const parent = slide.parentNode\n        const clone = slide.cloneNode(true)\n        clone.style.display = \"block\"\n        parent.appendChild(clone)\n        const height = clone.getBoundingClientRect().height\n        parent.removeChild(clone)\n        this.slideToggle(slide, 0, height)\n    };\n\n    onExiting = () => {\n        const slide = findDOMNode(this.refs.slide)\n        const height = slide.getBoundingClientRect().height\n        this.slideToggle(slide, height, 0)\n    };\n\n    renderWithCollapse () {\n        const { children } = this.props\n\n        return (\n            <Transition ref=\"slide\"\n                        in={ this.props.in }\n                        timeout={ TRANSITION_DURATION }\n                        onEntering={ this.onEntering }\n                        onExiting={ this.onExiting }\n                        enteredClassName=\"collapse in\"\n                        exitedClassName=\"collapse\">\n                { children }\n            </Transition>\n        )\n    }\n\n    renderWithoutCollapse () {\n        const { children } = this.props\n        const child = React.Children.only(children)\n        const styles = { display : \"none\" }\n\n        return cloneElement(child, Object.assign({}, child.props, {\n            style : Object.assign({}, child.props.style, !this.props.in ? styles : {})\n        }))\n    }\n\n    render () {\n        const { collapse } = this.props\n        return collapse ? this.renderWithCollapse() : this.renderWithoutCollapse()\n    }\n\n}\n\nexport default DateTimePickerViewSlide\n"]}